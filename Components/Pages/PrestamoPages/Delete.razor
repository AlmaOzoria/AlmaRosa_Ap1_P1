@page "/Cobro/Delete/"
@page "/Cobro/Delete/{CobroId:int}"
@inject CobroServices cobroService
@inject CobroDetalleServices cobroDetalleService
@inject NavigationManager navigationManager
@inject IJSRuntime jsRuntime
@rendermode InteractiveServer

<h3>Eliminar Cobro</h3>

@if (Cobro != null)
{
    <div class="card">
        <div class="card-body">
            <dl class="row">
                <dt class="col-sm-3">CobroId:</dt>
                <dd class="col-sm-9">@Cobro?.CobroId</dd>

                <dt class="col-sm-3">Fecha:</dt>
                <dd class="col-sm-9">@Cobro?.Fecha</dd>

                <dt class="col-sm-3">DeudorId:</dt>
                <dd class="col-sm-9">@Cobro?.deudores.Nombres</dd>

                <dt class="col-sm-3">Monto:</dt>
                <dd class="col-sm-9">@Cobro?.Monto</dd>
                
                <dt class="col-sm-3">Concepto:</dt>
                <dd class="col-sm-9">@CobroDetalle?.Prestamo.Concepto</dd>               
                
                <dt class="col-sm-3">Valor Cobrado:</dt>
                <dd class="col-sm-9">@CobroDetalle?.ValorCobrado</dd>
                

            </dl>

            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
            <a href="/Cobro/Index" class="btn btn-primary">
                <span>Volver </span> <i class="bi bi-arrow-left mt-3" />
            </a>
        </div>

    </div>


}
else
{
    <p class="alert alert-danger">No se encontró el cobro</p>
}


@code {
    [Parameter]
    public int CobroId { get; set; }
    public Cobro? Cobro { get; set; }
    public CobroDetalle? CobroDetalle { get; set; }


    protected override async Task OnInitializedAsync()
    {
        
        Cobro = await cobroService.Buscar(CobroId);
        CobroDetalle = await cobroDetalleService.Buscar(CobroId); 

        if (Cobro == null)
        {
            await jsRuntime.InvokeVoidAsync( "El cobro no fue encontrado.");
            Volver();
        }
    }

    public async Task Eliminar()
    {
        if (Cobro != null)
        {
            var eliminado = await cobroService.Eliminar(Cobro.CobroId);
            if (eliminado)
                Volver();
            else
                await jsRuntime.InvokeVoidAsync("No se pudo eliminar el cobro.");
        }
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Cobro/Index");
    }
}
